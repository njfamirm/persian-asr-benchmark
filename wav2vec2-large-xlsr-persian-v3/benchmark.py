import numpy as np
import torch
import librosa
import torchaudio
from transformers import Wav2Vec2ForCTC, Wav2Vec2Processor
import jiwer  # Import jiwer for WER calculation
from normalizer import normalizer

if __name__ == "__main__":
    # Replace 'audio.wav' with your audio file path
    audio_file = 'audio.wav'
    
    # Replace with the true transcription of the audio
    reference_transcription = ' ما دنبال نیروی خوب میگردیم و میدونیم نیروی خوب میخایم اما آیا میدونی نیرو‌های خوبم چی میخان دوتا مسله وجود داره که باز توی استختام ب خسوس باید ما در نظر بگیریم و اون اینکه ما دنبال نیروی کار خوب هستیم ودیگه یه بخش داستانی ه بخش دوم اینی که نمیدونی نی روی کار خوب دنبال چی یعنی متالیتی ذهنی اون آدمهرو نمیدونیی قولحویت رو میزاریم روی مسائل مالیه ور فاهی و پشتیبانی و امنیت شغلی و واژ‌های علکه که خودمونو باش گول زدی بر ادامه خواهیم دید که برخی از افراد اخرین ولویتشون اولویت مالیه بسیاری از سازمان‌ها هستن که افرادیا نی رو‌ها میرن تو اون سازمان‌ها کار میکنن فقط به این دلیل که بخشی از این تجربه‌های اون سازمان مال خودشون این براش خی بیش‌تر میرس وما اینو نمایش ندادی تو اگهی‌های استخدا حالا تو بحث سرفن آگهی استخدام و نوشتنش که یه کار فوق قول داده تخصصیه به نظر من اصلن علم کپی رایتینگ لازم داره شما مجموعه ادبیات  اگه ای‌های استخدام  الان بره توی سایت استخدامه تو برکتن ب بی دا روز ببینین ببینین ادبیات اینا اسلن و هم فرق نداریه شرکت معتبر در زمینه ی قرس علاهاظا همه ما این شروع میشن خب این هیچ ای میزی نمیره بعد همه میان این میل‌های ن تازه درست شده یا فیک درست میکنن فقط براین پروسه استخدام میگه خب چرای کار میکنین میگه براینکه خوب ادما زنگ نزنن اینجا بیچار مویکنن بن خب برچی زنگ میزنن بخاب پرسن حقوق شنده ساعت کاری ند خوب اینال رو اگه بنویسی یا مثلن توزیات کامله بدیدیگه زنگ نمیزنن میگه خب چرا زنگ میزنن میا خوب اونیکه زنگ میزنه تخریفش رو شنی و بدردتونین خونه ن یه فیلتر پا نمیشه جوزاون نبد و خورده ی ادم بیات اینجا کلی شکوپی کنه و علکیم وخت شمارو بگیره بعد تمام دق دقشاین بشه حقوس هانده بیمه است که ایمیکنی ساعت کارتون هست که این سواله رو گذاشتی ی فیلتر گذاشتی برش'
    
    # Get predicted transcription
    predicted_transcription = "ما دنبال نیروی خوب می گردیم و می دونیم نیروی خوب می خوایم اما آیا میدونیم نیروهای خوب هم چی می خوان دو تا مسئله وجود داره که باز توی استخدام به خصوص باید ما در نظر بگیریم و اون اینکه ما دنبال نیروی کار خوب هستیم بدیهیه یه بخش داستان اینه بخش دوم اینه که نمی دونیم نیروی کار خوب دنبال چیه یعنی من منتالیتی ذهنی اون آدمه رو نمیدونیم اولویت رو میذاریم روی مسائل مالی و رفاهی و پشتیبانی و امنیت شغلی و واژه های الکی که خودمون رو باهاش گول زدیم در ادامه خواهیم دید که برخی از افراد آخرین اولویتشون اولویت مالیه بسیاری از سازمان ها هستند که افراد یا نیروها می رن تو اون سازمان ها کار می کنن فقط به این دلیل که بخشی از این تجربه های اون سازمان رو مال خودشون بکنن این براش خیلی بیشتر می ارزه و ما اینو نمایش ندادیم تو آگهی استخدام حالا تو بحث صرفاً آگهی استخدام و نوشتنش که یه کار فوق العاده تخصصیه به نظر من اصلا علم کپی رایتینگ لازم داره شما مجموعه ادبیات آگهی استخدام و الان برید توی سایت استخدامی تو بریک تایم ببینید یا امروز ببینید ادبیات اینا اصلا با هم فرق نداره شرکت معتبر در زمینه قص علی هذا همه با این شروع میشن خب این هیچ ایمیجی نمیده بعد همه میان ایمیل های تازه درست شده یا فیک درست می کنن فقط برای این پروسه استخدام می گی خب چرا این کارو بکنی میگه برای اینکه خب آدما زنگ نزنن اینجا بیچاره مون کنن می گم خب برای چی زنگ می زنن می خوان بپرسن حقوق چنده ساعت کاری چنده خب اینا رو اگه بنویسی یا توضیحات کاملی بدی دیگه زنگ نمی زنند میگه خب چرا زنگ می زنن میگم خب اونی که زنگ می زنه تکلیفش روشنه بدرد تو نمیخوره این یه فیلتر پا نمی شه جز اون نود و خورده آدم بیاد این جا کلی شیک و پیک کنه و الکی هم وقت شما رو بگیره بعد تمام دغدغه ش این باشه حقوق چند بیمه از کی می کنی ساعت کاری تون از کیه این سوال رو گذاشتی یه فیلتر گذاشتی براش"
    
    # Normalize predicted and reference transcriptions
    batch_pred = {'sentence': predicted_transcription}
    normalized_pred = normalizer(batch_pred)['sentence']
    
    batch_ref = {'sentence': reference_transcription}
    normalized_ref = normalizer(batch_ref)['sentence']
    
    # Calculate WER before normalization using jiwer
    wer_before = jiwer.wer(reference_transcription, predicted_transcription)
    
    # Calculate WER after normalization using jiwer
    wer_after = jiwer.wer(normalized_ref, normalized_pred)
    
    # Print results
    print(f"Predicted Transcription: {predicted_transcription}")
    print(f"Normalized Predicted Transcription: {normalized_pred}")
    print(f"Reference Transcription: {reference_transcription}")
    print(f"Normalized Reference Transcription: {normalized_ref}")
    print(f"WER before normalization: {wer_before}")
    print(f"WER after normalization: {wer_after}")